# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-16 16:40
from __future__ import unicode_literals

from django.db import migrations

def is_editor(user):
    if not user:
        return False

    if user.is_superuser or \
       user.team_memberships.exclude(categories__isnull=True)\
                            .exists():
        return True
    else:
        return False

def add_is_contribution(apps, schema_editor):
    ExplanationRevision = apps.get_model('exams', 'ExplanationRevision')

    # In two cases we will consider is_contribution=True if both of
    # these conditions apply:
    # 1) If the user is not editor
    # 2) If the explanation was added in a minute that differs
    #    from first_revision
    for explanation in ExplanationRevision.objects.select_related('submitter', 'question')\
                                                  .filter(is_deleted=False, question__is_deleted=False,
                                                          submitter__isnull=False):
        first_revision = explanation.question.revision_set.order_by('submission_date').first()
        if not first_revision:
            continue

        if not is_editor(explanation.submitter) and \
           (first_revision.submission_date.year != explanation.submission_date.year or \
            first_revision.submission_date.month != explanation.submission_date.month or \
            first_revision.submission_date.day != explanation.submission_date.day or \
            first_revision.submission_date.hour != explanation.submission_date.hour or \
            first_revision.submission_date.minute != explanation.submission_date.minute):
            explanation.is_contribution = True
            explanation.save()

def remove_is_contribution(apps, schema_editor):
    ExplanationRevision = apps.get_model('exams', 'ExplanationRevision')
    ExplanationRevision.objects.update(is_contribution=False)

class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0057_explanationrevision_is_contribution'),
    ]

    operations = [
        migrations.RunPython(add_is_contribution,
                             reverse_code=remove_is_contribution)
    ]
